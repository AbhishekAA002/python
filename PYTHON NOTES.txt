                                                     
                 
                                                                          ((  PYTHON  )) 


************************************************************Tutorial(3)*********************************************************************************************************
1.)variables(A container which is used to store the data type)

a=10; (type(a)=int)
b=1.3 (type(b)=float)
c='c' (type(c)=str)
f,g,h=1,2,'shi'
d="Abhishek" (type(d)=str)

string extensions:
d[0]='A'
d[2: ]='bhishek'
d[ :4]='Abhi'
a='roll n.o :'
b=10
c=a+str(b) #it will convert int to string 
print(c) or print(a,b)
len(d)='8' (length of string)

***********************************Types of variables names ***************************************************************************************************************
#camel case 
userFullName - camelcase

#pascal case

UserFullName -Pascal case

#snake case
user_full_name -snake case


_____________________________________________________________________________________________________________________



************************************************************Tutorial(4)/*******************************************************************************************************************************************

1.)LISTS 

there are basically 4 typesof arrays in python :-
----------------------------------------------------------------------------------------
1.)list 

list is like an arrray which can hold multiple data types in it 

(I)syntax :

fruits=['apple','banana','orange','True','False',1.2,3,'abhi']

Here :

i.)fruits is the list name .
ii.)it constist of different data types. 
iii.)list was enclosed with closed square brackets [].

Let's see some more fuctions in list like (insertion,deletion,manuplation) 

ex:-

nums =[5,10,15,19,26,53]  #list with name nums

(i)ACESSING ELEMENTS THROUGH INDEX (A,O):-
______________________________________

syntax :- nums[0] (output:-5)
          nums[1] (output:-10)



(ii )ACESSING ELEMENTS THROUGH INDEX (D,O):-
______________________________________


syntax :- nums[-1] (output:53)
          nums[-3] (output:-19)


(iii)Adding items to list :-(.append)#last/(.insert)#index/(.extend)#it will add more than one item to list at end
_______________________________________________________________________________________________________________________

(i.).append

**.append will add 1 item to the end of list 

syntax :- nums.append(12) (#the element will be added to the end of the list)
          nums.append('abhi') (#the element will be added to the end of the list)
          nums.append(True) (#the element will be added to the end of the list)

 
**.append will add 1 item to the end of list 


(ii.).insert

**.inset will add 1 item if index is given or else at last of list

syntax:- listname(indexnum,'abhilu')

         nums.insert(0,'jaidc') #jaidc will be inserted in oth index in the list


(iii).extend

 **it will add more than one item to the list at the end 

syntax :- listname.extend(['riya','priya','hoyna',True,False,1,1.8])

______________________________________________________________________________________________________________________________________

 
     
                                               MANUPLATION:


(i)Changing the elements in the pirticular index :

syntax :- listname[index]='sri'
          name[0]='abh'
          name[2]=1.8


(ii)Changing the multiple elements in the different index  index :

syntax :- listname[initial index:finalindex+1]

           name[1:3]={'reys','mel'} here elements present in the index 1 nad 2 get changed with the tow items 


(iii)Soring list (.sort)

syntax :- name.sort() (#it will arrange the list in asending order and the list is reversed )


(v)desending order 

syntax :- name.sort(reverse=True)(# first it will sort and then it will be )



(iv)revesing the list (.reverse)

syntax :- name.reverse() (#it will arrange the list in the reverse order)


(vi) finding the max element in the list (max(listname))


(vii)finding the min element in the list (min(listname))

__________________________________________________________________________________________________________________________________________


                                        DELETION;


i)Removal of item using that pirticular name :-----(.remove)

syntax :- listname.remove('Berry') #it will remove the item berry present in the list 
 


(ii)removal of item based on index (#it will show the removed item as output)(.pop )

syntax :- listname.pop(indexvalue)
          name.pop(2) #it will remove the item present in the index 2


(iii)removal of item based on index based on (del) (del )

syntax :- del listname[indexnumber]
          del names[2] #it will remove the item present in the index 2

(iv)Deletion of total list : (#.clear())

syntax :  listname.clear()
          name.clear()# the entire list will be deleted
          







***********************************************************************************************************TUTORIAL-5**************************************************************


                                                           TUPLES



Def:-Tuple is variable which can hold more than a value related to different data type
     this is same as list 
     but:
     1.)Tuples are immutable
     2.)means after insering we can change any thing
     3.)these are donoted by ()ROUNDED BRACKETS
     4.)but there is a way to manage tuple by changint tuple to list and next list to tuple

 


syntax:-    
 
          num=('abhi','vamsi','jagadesh','mithil',1,2,True,2.3,False)

There are only two functions we can do manuplate tuples :-
_________________________________________________________

1.)num.index(False)

2.)

___________________________________________

making changes is possible with convesion of tuples to list and list to tuples 
with to functions;

list()
tuple()

ex:-

>>> name=('abhi','swetha','nikitha')
>>> namelist=list(name)
>>> namelist
['abhi', 'swetha', 'nikitha']
>>> namelist.pop(2)
'nikitha'
>>> namelist
['abhi', 'swetha']
>>> name=tuple(namelist)
>>> name
('abhi', 'swetha')
*******************************************************************************************************************************************************************************************************************

                                                                       **TUTORIAL-6**
                                           
                                   SETS

1.)sets uses flower brackets
2.)set is unordered 
3.)So we can't access though index
4.)duplicates values are not allowed
4.)insertion and modification is not possible

ex:-

>>> flowers={'jasmine','rose','pink',1,2.4,True,False}
>>> flowers
{False, 1, 2.4, 'jasmine', 'pink', 'rose'}
>>> flowers
{False, 1, 2.4, 'jasmine', 'pink', 'rose'}



**************************************************************************************************************************************************************************************************************************************************
                                                                **tutrial-7**
 
                                Dictionary       
1.)it uses flowe brackets
2.)we use keywords as index
3.)it is ordered 
4.)duplicate values are not allowed 


syntax: name={'key':'value','key1':'value1',..}


ex:


>>> person={'f':'A','n':'abhishek','r':20103,'o':True,'2o':False}
>>> person
{'f': 'A', 'n': 'abhishek', 'r': 20103, 'o': True, '2o': False}

#(I)ACCESSING DICTONARY ELEMENTS IS POOOSIBLE THROUGH KEY ID:
>>> person['f']
'A'

#(ii)CHAGING THE VALUES IS POSSSIBLE IN DICTONARY (id/update)
>>> person['r']='03'
>>> person
{'f': 'A', 'n': 'abhishek', 'r': '03', 'o': True, '2o': False}


person.update({'r':20103})

#(iii)ADDING OF DICTONARY IS POSSIBLE THROUGH .update() function

person.update({'age':35})


#(iv) removal of item .pop(idname)

person.pop('age')

#(v)removal of last item in dictionary (.popitem())
person.popitem()

#deletion of element  dictionary (del)
del person ['roll']

#deletion of whole dictionary 
del person

#wann empty dictionary 

person.clear()

#wann to find keys(name.keys)

person.keys

#wann find vales (name.values)

person.values 

******************************************************************************************************************************************************************************************

                                                                            USER INPUT 

BASICALLY IN (C)

int x ;
scanf("%d",&x);


IN PYTHON BASICALLY IT WILL TAKE NUMBER AS STRING IF WE NOT DECLARED
x=int(input("Enter a number : "))#it will take input as integer

                        **CODE**(without declaring string)

#basically we can take input in two ways
#1
print("Enter a number :")
x=input()
print("You entered : ",x)

#method 2
y=input("Enter a number")
print("You entered : ",y)
print("The numbers you entered is stored in strinng format")

#fa example we will c the sum
print("The sum of two numbers is : ",x+y,"(ERROR)")

                     **OUTPUT**

Enter a number :
12
You entered :  12
Enter a number22
You entered :  22
The numbers you entered is stored in strinng format
The sum of two numbers is :  1222 (ERROR)


***********************************************probmels covered is over ******************************************************

   
 
                                                                **controll statements**


1.)if
2.)if-else
3.)elif
4.)nested if 


**in python if is statements are based with indent means spaces ****


1.)if :-
synatx :   if condiction :
               stetement1....

               statement2....
               
               statement3....
                
               statement4....


2.)if-else :-
synatx :   if condiction :
               stetement1....

               statement2....
               
               statement3....
                
               statement4....
 

           else :

                
               stetement1....

               statement2....
               
               statement3....
                
               statement4....


3.)elif:-


synatx :   if condiction :
               stetement1....

               statement2....
               
               statement3....
                
               statement4....

           elif condiction :

               stetement1....

               statement2....
               
               statement3....
                
               statement4....
              

           elif condiction :

               stetement1....

               statement2....
               
               statement3....
                
               statement4....

           elif condiction :

               stetement1....

               statement2....
               
               statement3....
                
               statement4....



